<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>solidSpoon's Blog</title>
    <script src="https://cdn.jsdelivr.net/npm/fuse.js@6.6.2"></script>
    {{> styles}}
</head>
<body>
    {{> header}}
    <main class="main-content">
        <div class="header">
            <h1>solidSpoon</h1>
            <div class="motto">方向是比速度更重要的追求</div>
            <div class="description">
                这里是我的个人博客，记录技术、生活和思考。欢迎交流讨论。
            </div>
        </div>
        <div class="search-container">
            <input type="text" class="search-input" placeholder="搜索文章..." id="searchInput">
        </div>
        <div class="posts" id="postsContainer">
            {{#each posts}}
            <div class="post-item" data-title="{{this.title}}" data-content="{{this.searchContent}}">
                <h2><a href="{{this.slug}}.html">{{this.title}}</a></h2>
                <div class="post-date">{{this.date}}</div>
                <div class="excerpt">{{this.excerpt}}</div>
            </div>
            {{/each}}
        </div>
    </main>
    {{> footer}}
    <script>
        // 初始化 Fuse.js
        const posts = Array.from(document.querySelectorAll('.post-item')).map(item => ({
            title: item.dataset.title,
            content: item.dataset.content
        }));

        const fuse = new Fuse(posts, {
            keys: ['title', 'content'],
            threshold: 0.3,
            includeMatches: true,
            minMatchCharLength: 2
        });

        // 搜索功能
        const searchInput = document.getElementById('searchInput');
        const postsContainer = document.getElementById('postsContainer');
        let noResultsElement = null;

        searchInput.addEventListener('input', (e) => {
            const query = e.target.value;
            const postItems = document.querySelectorAll('.post-item');
            let hasVisiblePosts = false;

            if (query.length < 2) {
                // 如果搜索词太短，显示所有文章
                postItems.forEach(item => {
                    item.style.display = 'block';
                    hasVisiblePosts = true;
                });
            } else {
                const results = fuse.search(query);
                
                postItems.forEach(item => {
                    const result = results.find(r => r.item.title === item.dataset.title);
                    if (result) {
                        item.style.display = 'block';
                        hasVisiblePosts = true;
                        // 高亮匹配文本
                        const title = item.querySelector('h2 a');
                        const content = item.querySelector('.excerpt');
                        if (result.matches) {
                            result.matches.forEach(match => {
                                if (match.key === 'title') {
                                    title.innerHTML = highlightText(title.textContent, match.indices);
                                } else if (match.key === 'content') {
                                    content.innerHTML = highlightText(content.textContent, match.indices);
                                }
                            });
                        }
                    } else {
                        item.style.display = 'none';
                    }
                });
            }

            // 处理"没有找到相关文章"提示
            if (!hasVisiblePosts) {
                if (!noResultsElement) {
                    noResultsElement = document.createElement('div');
                    noResultsElement.className = 'no-results';
                    noResultsElement.textContent = '没有找到相关文章';
                    postsContainer.appendChild(noResultsElement);
                }
            } else if (noResultsElement) {
                noResultsElement.remove();
                noResultsElement = null;
            }
        });

        // 高亮文本函数
        function highlightText(text, indices) {
            let result = '';
            let lastIndex = 0;
            indices.forEach(([start, end]) => {
                result += text.slice(lastIndex, start);
                result += `<span class="highlight">${text.slice(start, end + 1)}</span>`;
                lastIndex = end + 1;
            });
            result += text.slice(lastIndex);
            return result;
        }
    </script>
</body>
</html> 